[package]
name = "midos-house"
version = "0.1.0"
edition = "2021"

[profile.release]
codegen-units = 1
lto = true
strip = true

[lints.rust]
rust_2018_idioms = "deny"
unsafe_code = "forbid"
unused = "deny"
unused_crate_dependencies = "deny"
unused_import_braces = "deny"
unused_lifetimes = "deny"
unused_qualifications = "deny"
warnings = "deny"

[features]
dev = []
production = []
local = []

[build-dependencies]
git2 = "0.19"
thiserror = "1"

[dependencies]
anyhow = "1"
async-graphql = { git = "https://github.com/fenhl/async-graphql", branch = "forms" }
async-graphql-rocket = { git = "https://github.com/fenhl/async-graphql", branch = "forms" }
async-trait = "0.1"
base64 = "0.22"
chrono = { version = "0.4", default-features = false, features = ["clock", "serde", "std"] }
chrono-tz = "0.10"
clap = { version = "4", features = ["derive"] }
collect-mac = "0.1"
convert_case = "0.6"
csv = "1"
derivative = "2"
derive_more = { version = "1", features = ["display", "from", "from_str"] }
either = "1"
enum-iterator = "2"
futures = "0.3"
git2 = "0.19"
#graphql_client = "0.11" # workaround for https://github.com/smashgg/developer-portal/issues/171 â€” see also https://github.com/graphql-rust/graphql-client/pull/437
graphql_client = { git = "https://github.com/fenhl/graphql-client", branch = "skip-default-scalars" }
hyper = "1.4.1"
ics = "0.5"
if_chain = "1"
image = { version = "0.25", default-features = false, features = ["png"] }
itertools = "0.13"
kuchiki = "0.8"
lazy-regex = "3"
log = "0.4"
log-lock = { git = "https://github.com/fenhl/log-lock", branch = "main" }
noisy_float = "0.2"
ootr-utils = { git = "https://github.com/midoshouse/rust-ootr-utils", branch = "main", features = ["sqlx"] }
racetime = "0.25"
rand = "0.8"
reqwest = { version = "0.12", default-features = false, features = ["charset", "hickory-dns", "http2", "json", "macos-system-configuration", "rustls-tls", "stream"] }
rocket = { git = "https://github.com/fenhl/Rocket", branch = "forms" }
rocket-util = { git = "https://github.com/fenhl/rocket-util", branch = "forms", features = ["ics", "image", "rocket_csrf"] }
rocket_csrf = { git = "https://github.com/fenhl/rocket_csrf", branch = "forms" }
rocket_oauth2 = { git = "https://github.com/fenhl/rocket_oauth2", branch = "forms" }
semver = { version = "1", features = ["serde"] }
serde = { version = "1", features = ["derive"] }
serde_json_inner = { package = "serde_json", version = "1", features = [
    "preserve_order", # required to correctly render progression spoilers
] }
serde_json = { package = "serde_json_path_to_error", version = "0.1" }
serde_plain = "1"
serde_with = { version = "3", features = ["json"] }
serenity = { version = "=0.12.1", default-features = false, features = ["client", "gateway", "model", "rustls_backend", "temp_cache"] } # https://github.com/serenity-rs/serenity/issues/2883
serenity-utils = { git = "https://github.com/fenhl/serenity-utils", branch = "main" }
sqlx = { version = "0.8", default-features = false, features = ["chrono", "json", "macros", "postgres", "runtime-tokio-rustls", "uuid"] }
thiserror = "2"
tokio = { version = "1", features = ["fs", "net", "parking_lot", "process", "sync", "time"] }
tokio-util = { version = "0.7", features = ["io"] }
typemap_rev = "0.3"
url = { version = "2", features = ["serde"] }
uuid = "1"
wheel = { git = "https://github.com/fenhl/wheel", branch = "main", features = ["chrono", "racetime", "reqwest", "rocket", "serde", "serde_json", "serde_json_path_to_error"] }
yup-oauth2 = "11"

[target.'cfg(unix)'.dependencies]
async-proto = { version = "0.24", features = ["chrono", "serde_json", "serenity", "uuid"] }
openssl = { version = "0.10", features = ["vendored"] }
xdg = "2"

[target.'cfg(windows)'.dependencies]
directories = "5"
